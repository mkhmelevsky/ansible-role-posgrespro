---
# Variables for Postgres Pro Std running under RHEL/CentOS

# Yum settings
postgresql_repo_key_url: "http://repo.postgrespro.ru/keys/GPG-KEY-POSTGRESPRO"
postgresql_yum_repository_base_url: "http://repo.postgrespro.ru"

# /pgpro-11/centos/7/os/x86_64/rpms/
postgresql_yum_repository_url: "{{ postgresql_yum_repository_base_url }}/pgpro-{{ postgresql_version }}/{{ ansible_distribution | lower }}/$releasever/os/$basearch/rpms"
postgresql_yum_source_repository_url: "{{ postgresql_yum_repository_base_url }}/pgpro-{{ postgresql_version }}/{{ ansible_distribution | lower }}/$releasever/os/$basearch/srpms"

postgresql_client_packages:
  - "python-psycopg2"
  - "python-pycurl"
  - "glibc-common"

postgresql_packages:
  - "postgrespro-std-{{ postgresql_version }}-libs"
  - "postgrespro-std-{{ postgresql_version }}-client"
  - "postgrespro-std-{{ postgresql_version }}-server"
  
# Using a different cluster name could cause problems with SELinux.
# See /usr/lib/systemd/system/postgresql-*.service
postgresql_cluster_name: "data"
postgresql_service_name: "postgrespro-std-{{ postgresql_version }}"

# /var/lib/pgpro/std-11
postgresql_varlib_directory_name: "pgpro"
postgresql_data_directory: "/var/lib/{{ postgresql_varlib_directory_name }}/{{ postgresql_version }}/{{ postgresql_cluster_name }}"
postgresql_conf_directory: "{{ postgresql_data_directory }}"

# Location of postgres configuration files here
# HBA (Host Based Authentication) file
postgresql_hba_file: "{{ postgresql_conf_directory }}/pg_hba.conf"
# Ident configuration file
postgresql_ident_file: "{{ postgresql_conf_directory }}/pg_ident.conf"
# Use data in another directory
postgresql_pid_directory: "/var/run/pgpro"
# If external_pid_file is not explicitly set, on extra PID file is written
postgresql_external_pid_file: "{{ postgresql_pid_directory }}/{{ postgresql_version }}-{{ postgresql_cluster_name }}.pid"


# Used to execute initdb
postgresql_bin_directory: "/opt/pgpro/std-{{ postgresql_version }}/bin"

postgresql_unix_socket_directories:
  - "{{ postgresql_pid_directory }}"
  - /tmp

# Extensions
postgresql_ext_contrib_package: "postgrespro-std-{{ postgresql_version }}-contrib"
postgresql_ext_plpython_package: "postgrespro-std-{{ postgresql_version }}-plpython"
postgresql_ext_plperl_package: "postgrespro-std-{{ postgresql_version }}-plperl"
postgresql_ext_pltcl_package: "postgrespro-std-{{ postgresql_version }}-pltcl"

#
# CONFIG FILE
#
postgresql_password_encryption: "scram-sha-256"  # md5 or scram-sha-256
postgresql_max_parallel_maintenance_workers: 2   # taken from max_parallel_workers
postgresql_max_parallel_workers_per_gather: 2    # taken from max_worker_processes
postgresql_parallel_leader_participation: on
postgresql_max_parallel_workers: 8               # maximum number of max_worker_processes that can be used in parallel operations
postgresql_wal_level: replica
postgresql_max_wal_senders: 10                   # max number of walsender processes

# - Subscribers -
# These settings are ignored on a publisher.
postgresql_max_logical_replication_workers: 4    # taken from max_worker_processes
postgresql_max_sync_workers_per_subscription: 2  # taken from max_logical_replication_workers

# - Planner Method Configuration -
postgresql_enable_parallel_append: on
postgresql_enable_partitionwise_join: off
postgresql_enable_partitionwise_aggregate: off
postgresql_enable_parallel_hash: on
postgresql_enable_partition_pruning: on

# - Planner Cost Constants -
postgresql_jit_above_cost: 100000                # perform JIT compilation if available and query more expensive than this; -1 disables
postgresql_jit_inline_above_cost: 500000         # inline small functions if query is more expensive than this; -1 disables
postgresql_jit_optimize_above_cost: 500000       # use expensive JIT optimizations if query is more expensive than this; -1 disables

postgresql_min_parallel_table_scan_size: 8MB
postgresql_min_parallel_index_scan_size: 512kB

postgresql_jit: off                              # allow JIT compilation

postgresql_row_security: on
postgresql_vacuum_cleanup_index_scale_factor: 0.1 # fraction of total number of tuples before index cleanup, 0 always performs index cleanup

# - Shared Library Preloading -
postgresql_shared_preload_libraries: []

postgresql_jit_provider: 'llvmjit'                # JIT library to use

#------------------------------------------------------------------------------
# LOCK MANAGEMENT
#------------------------------------------------------------------------------
postgresql_max_pred_locks_per_relation: -2        # negative values mean (max_pred_locks_per_transaction / -max_pred_locks_per_relation) - 1
postgresql_max_pred_locks_per_page: 2             # min 0

...
